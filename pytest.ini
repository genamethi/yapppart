[pytest]
# Register custom markers to avoid warnings and typos.
markers =
    optional: mark test as optional (not required for basic correctness)
    version_based: mark test as version-dependent (xfail/xpass based on version)
    configuration_test: mark test as testing configuration hierarchy
    cython_available: mark test as requiring Cython extensions
    pure_python: mark test as running in pure Python mode
    future_feature: mark test for features not yet implemented
    slow: mark test as slow (functional/integration tests)

# Default command-line options to ensure consistent test runs.
# -ra: show extra test summary info for all but passes
# -v: verbose output
# --strict-markers: fail on unregistered markers
addopts = -ra -v --strict-markers

# Specify the directory where tests are located.
testpaths = tests

# Add src to Python path so tests can import properly
pythonpath = src

# Environment variables for testing configuration  
# Note: The 'env' option requires pytest-env plugin. For now, we set these manually or use pixi.
# env =
#     PPPART_TEST_MODE = 1
#     PPPART_USE_CYTHON = 0

# Globs for test file and function names.
python_files = test_*.py
python_functions = test_*

# Directories to exclude from test discovery to speed up collection.
norecursedirs =
    .git
    .venv
    archive
    build
    dist
    *.egg-info
    logs
    sample
    src/factorsums/data 
    future

# Filter warnings
filterwarnings =
    ignore:This process:DeprecationWarning
